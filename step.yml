#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Bundle Universal Apk
summary: |
  Generates an universal apk from an app bundle
description: |
  Runs a bundletool that gets an app bundle path and generates an universal apk that it can be upload to alternative app stores or test platforms.
website: https://github.com/ch4vi/bitrise-step-bundle-universal-apk
source_code_url: https://github.com/ch4vi/bitrise-step-bundle-universal-apk
support_url: https://github.com/ch4vi/bitrise-step-bundle-universal-apk/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
project_type_tags:
  - android
#   - ios
#   - macos
#   - xamarin
#   - react-native
#   - cordova
#   - ionic

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - build

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: unzip
  - name: wget
  - name: curl
  apt_get:
  - name: unzip
  - name: wget
  - name: curl


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - aab_path: "$BITRISE_AAB_PATH"
    opts:
      title: "Build artifact path."
      summary: "`Android App Bundle (.aab)`"
      description: |-
        Path(s) to the build artifact file `.aab`. You can build the bundle running `:bundleRelease` gradle task
        Format examples:
        - `/path/to/my/app.aab`
      is_required: true

  - app_name: "app_name"
    opts:
      title: "App name"
      summary: "`App name that can be used for the app name or apks name`"
      description: |-
        The output is something like:
        Format examples:
        - `app_name.apk`
      is_required: true

  - keystore_url: $BITRISEIO_ANDROID_KEYSTORE_URL
    opts:
      title: "Keystore url"
      summary: ""
      description: |-
        For remote keystores you can provide any download location (ex: https://URL/TO/keystore.jks).
        For local keystores provide file path url. (ex: file://PATH/TO/keystore.jks).
      is_required: true
      is_sensitive: true
  - keystore_password: $BITRISEIO_ANDROID_KEYSTORE_PASSWORD
    opts:
      title: "Keystore password"
      summary: ""
      description: ""
      is_required: true
      is_sensitive: true
  - keystore_alias: $BITRISEIO_ANDROID_KEYSTORE_ALIAS
    opts:
      title: "Keystore alias"
      summary: ""
      description: ""
      is_required: true
      is_sensitive: true
  - keystore_alias_password: $BITRISEIO_ANDROID_KEYSTORE_ALIAS_PASSWORD
    opts:
      title: "Keystore alias password"
      summary: ""
      description: ""
      is_required: true
      is_sensitive: true

outputs:
  - BITRISE_APK_PATH:
    opts:
      title: "Path to the universal apk"
      summary: This is the path to the universal apk signed with the passed keystore
      description: |
       You can upload this apk to alternative app stores or your test platform
